/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

/**
 *
 * @author seif
 */
import javax.swing.*;
import java.awt.*;
import javax.swing.table.DefaultTableModel;
import Technique.AdminAdapter;
import Entity.Administrateur;
import com.alee.laf.label.WebLabel;
import com.alee.managers.style.skin.ninepatch.NPLabelPainter;
import DAO.AdministrateurDAO;
import Technique.SearchAdminAdapter;
import javax.swing.event.*;
import com.alee.extended.image.WebDecoratedImage;
import com.alee.extended.progress.WebProgressOverlay;
import java.io.IOException;
import javax.imageio.ImageIO;
import java.net.MalformedURLException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.net.URL;

public class SuperGUI extends javax.swing.JPanel {

    /**
     * Creates new form SuperGUI
     */
    private AdminAdapter admin = new AdminAdapter();
    private AdministrateurDAO adminDAO = new AdministrateurDAO();
    private int privilege;
    private MessageDigest md;
    private StringBuffer sb;
  

    public SuperGUI() {
        initComponents();
        
        panelAjout.setLocation(200, 200);
        adminTable.setModel(new AdminAdapter());

      

    }

    protected ImageIcon createImageIcon(String path,
            String description) throws NoSuchAlgorithmException, MalformedURLException, IOException {

        URL imgURL = new URL(path);
        Image image = ImageIO.read(imgURL);
        if (imgURL != null) {
            return new ImageIcon(image, description);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label2 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        recherche = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        adminTable = new javax.swing.JTable();
        erase = new javax.swing.JButton();
        panelAjout = new javax.swing.JPanel();
        repeatL = new javax.swing.JLabel();
        delete = new javax.swing.JCheckBox();
        add = new javax.swing.JCheckBox();
        mail = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        ajout = new javax.swing.JButton();
        repeat = new javax.swing.JTextField();
        prenom = new javax.swing.JTextField();
        nom = new javax.swing.JTextField();
        photoPanel = new javax.swing.JPanel();
        show = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(241, 241, 241));

        label2.setText("Administrateur");

        recherche.setText("recherche");
        recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheActionPerformed(evt);
            }
        });

        adminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nom", "prenom", "mail", "privil√®ge"
            }
        ));
        adminTable.setGridColor(new java.awt.Color(204, 204, 204));
        adminTable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(adminTable);

        erase.setText("supprimer");
        erase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseActionPerformed(evt);
            }
        });

        panelAjout.setBackground(new java.awt.Color(241, 241, 241));
        panelAjout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        repeatL.setIcon(new javax.swing.ImageIcon("C:\\Users\\seif\\Desktop\\design.png")); // NOI18N
        panelAjout.add(repeatL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, 430));

        delete.setText("DELETE");
        panelAjout.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 480, -1, -1));

        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        panelAjout.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, -1, -1));
        panelAjout.add(mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 249, -1));
        panelAjout.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, 249, -1));

        ajout.setText("Ajouter Admin");
        ajout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutActionPerformed(evt);
            }
        });
        panelAjout.add(ajout, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 480, 114, -1));
        panelAjout.add(repeat, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 249, -1));
        panelAjout.add(prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 249, -1));
        panelAjout.add(nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 249, -1));

        photoPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout photoPanelLayout = new javax.swing.GroupLayout(photoPanel);
        photoPanel.setLayout(photoPanelLayout);
        photoPanelLayout.setHorizontalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );
        photoPanelLayout.setVerticalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );

        show.setText("detail");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Tableau de bord");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAjout, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                        .addGap(108, 108, 108)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recherche)
                        .addGap(42, 42, 42))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(show)
                .addGap(58, 58, 58)
                .addComponent(erase)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label2)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recherche))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(show)
                            .addComponent(erase))
                        .addGap(18, 18, 18)
                        .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(panelAjout, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void eraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseActionPerformed

        if (adminTable.getSelectedRow() == -1) {
            if (adminTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "le tableau est vide");
            } else {
                JOptionPane.showMessageDialog(null, "il faut selectionner une ligne");
            }
        } else {
            int i = Integer.parseInt(adminTable.getValueAt(adminTable.getSelectedRow(), 0) + "");
            adminDAO.deleteAdmin(i);
            adminTable.setModel(new AdminAdapter());

        }
    }//GEN-LAST:event_eraseActionPerformed

    private void rechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheActionPerformed
        // TODO add your handling code here:

        AdministrateurDAO adminDAO = new AdministrateurDAO();
        String ch = new String();
        ch = search.getText();
        adminTable.setModel(new SearchAdminAdapter(ch));

    }//GEN-LAST:event_rechercheActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

    }//GEN-LAST:event_addActionPerformed

    private void ajoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutActionPerformed
        // TODO add your handling code here:
        int i = 0;
        if (nom.getText().equals("")) {
            i = -1;
        }
        if (mail.getText().equals("")) {
            i = -1;
        }
        if (prenom.getText().equals("")) {
            i = -1;
        }
        if (pass.getText().equals("")) {
            i = -1;
        }
        if (repeat.getText().equals("")) {
            i = -1;
        }
        if (!pass.getText().equals(repeat.getText())) {
            i = -2;
            JOptionPane.showMessageDialog(null, "mot de passe incorrect!");
        }
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "il faut remplir tous les champs");
        }

        /*
         add 7
         delete 5
         
         si add+delete ==> ajout delete 77 (super)        
         si delete+modify=> 54   (super - add)
         si add =>70 (super -modify-delete)
         si delete=> 50 (super - add -modify)
        
         */
        if (add.isSelected()) {
            if (delete.isSelected()) {
                privilege = 77;
            } else {
                privilege = 70;
            }
        } else if (delete.isSelected()) {
            privilege = 50;

        } else {
            i = -3;
        }

        if (i == -3) {
            JOptionPane.showMessageDialog(null, "il faut selectionner une privil√®ge");
        }
        if (i == 0) {
            Administrateur admin = new Administrateur();
            admin.setNom(nom.getText());
            admin.setPrenom(prenom.getText());
            admin.setMail(mail.getText());
            admin.setPassword(pass.getText());
            admin.setPrivilege(privilege);
            AdministrateurDAO adminDAO = new AdministrateurDAO();
            adminDAO.insertAdmin(admin);
            adminTable.setModel(new AdminAdapter());
            nom.setText("");
            mail.setText("");
            pass.setText("");
            prenom.setText("");
            repeat.setText("");
            add.setSelected(false);
            delete.setSelected(false);

        }
    }//GEN-LAST:event_ajoutActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        if (adminTable.getSelectedRow() == -1) {
            if (adminTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "le tableau est vide");
            } else {
                JOptionPane.showMessageDialog(null, "il faut selectionner une ligne");
            }
        } else {
        photoPanel.removeAll();
        ImageIcon icon = new ImageIcon();
        String mailSelected = (String) (adminTable.getValueAt(adminTable.getSelectedRow(), 3) + "");
        String nameSelected = (String) (adminTable.getValueAt(adminTable.getSelectedRow(), 1) + "");
        String prenomSelected = (String) (adminTable.getValueAt(adminTable.getSelectedRow(), 2) + "");
        
        try {
            sb = new StringBuffer();
            sb = this.hashing(mailSelected);
            icon = createImageIcon("http://www.gravatar.com/avatar/" + sb.toString(), "icon");

            //create Labels :
            JLabel iconLabel = new JLabel(icon, JLabel.LEFT);
            JLabel labelMail = new JLabel(mailSelected, JLabel.CENTER);
            JLabel labelNom=new JLabel(nameSelected,JLabel.CENTER);
            JLabel labelPrenom=new JLabel(prenomSelected,JLabel.CENTER);
           
            //adding Labels:
            
            photoPanel.add(iconLabel);
            photoPanel.add(labelMail);
            photoPanel.add(labelNom);
            photoPanel.add(labelPrenom);
            
            //styling labels:
            
            labelMail.setFont(new Font("Times New Roman", Font.ROMAN_BASELINE, 24));
            labelMail.setForeground(Color.darkGray);
            iconLabel.setBounds(0, 0, 100, 100);
            labelMail.setBounds(200, 0, 300, 100);
            
            labelNom.setFont(new Font("Times New Roman", Font.ROMAN_BASELINE, 24));
            labelNom.setForeground(Color.darkGray);
            labelNom.setBounds(200, 30, 300, 100);
            
            labelPrenom.setFont(new Font("Times New Roman", Font.ROMAN_BASELINE, 24));
            labelPrenom.setForeground(Color.darkGray);
            labelPrenom.setBounds(200, 50, 300, 100);

           

        } catch (MalformedURLException ex) {
            Logger.getLogger(SuperGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(SuperGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SuperGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_showActionPerformed

    //fonction de hashage pour le mail
    public StringBuffer hashing(String maild) {
        StringBuffer sb1 = new StringBuffer();
        try {
            md = MessageDigest.getInstance("MD5");
            md.update(maild.getBytes());
            byte[] digest = md.digest();

            for (byte b : digest) {
                sb1.append(String.format("%02x", b & 0xff));
            }
            return sb1;
        } catch (Exception e) {
            System.out.println("Exception");
        }
        return sb1;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox add;
    private javax.swing.JTable adminTable;
    private javax.swing.JButton ajout;
    private javax.swing.JCheckBox delete;
    private javax.swing.JButton erase;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label2;
    private javax.swing.JTextField mail;
    private javax.swing.JTextField nom;
    private javax.swing.JPanel panelAjout;
    private javax.swing.JTextField pass;
    private javax.swing.JPanel photoPanel;
    private javax.swing.JTextField prenom;
    private javax.swing.JButton recherche;
    private javax.swing.JTextField repeat;
    private javax.swing.JLabel repeatL;
    private javax.swing.JTextField search;
    private javax.swing.JButton show;
    // End of variables declaration//GEN-END:variables

}
